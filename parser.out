Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLE
    CHAR
    INT
    TAB
    FLOAT

Grammar

Rule 0     S' -> emoticon
Rule 1     emoticon -> instrucciones
Rule 2     cuerpo -> instrucciones
Rule 3     cuerpo -> instrucciones instrucciones
Rule 4     cuerpo -> empty
Rule 5     instrucciones -> instruccion instrucciones
Rule 6     instrucciones -> instruccioncuerpo instrucciones
Rule 7     instrucciones -> instruccion
Rule 8     instrucciones -> instruccioncuerpo
Rule 9     instruccioncuerpo -> for acorch cuerpo ccorch
Rule 10    instruccioncuerpo -> if acorch cuerpo ccorch
Rule 11    acorch -> ACORCH
Rule 12    ccorch -> CCORCH
Rule 13    instruccion -> asignacion PUNTOCOMA
Rule 14    if -> IF APARENT comparacionRet CPARENT
Rule 15    for -> FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
Rule 16    paramFor1 -> asignacionesRet
Rule 17    paramFor1 -> empty
Rule 18    asignacionesRet -> asignacionRet asignacionesRet
Rule 19    asignacionesRet -> asignacionRet
Rule 20    asignacionRet -> ID IGUAL valor
Rule 21    asignacionRet -> RESERVADOS ID IGUAL valor
Rule 22    asignacion -> ID IGUAL valor
Rule 23    asignacion -> RESERVADOS ID IGUAL valor
Rule 24    comparacionesRet -> comparacionRet
Rule 25    comparacionRet -> valor opbooleano valor
Rule 26    paramFor3 -> ID MAS MAS
Rule 27    paramFor3 -> MAS MAS ID
Rule 28    paramFor3 -> MENOS MENOS ID
Rule 29    paramFor3 -> ID MENOS MENOS
Rule 30    opbooleano -> MENOR
Rule 31    opbooleano -> MENORIG
Rule 32    opbooleano -> MAYOR
Rule 33    opbooleano -> MAYORIG
Rule 34    opbooleano -> IGUALIG
Rule 35    opbooleano -> DIFERENTE
Rule 36    opbooleano -> AND
Rule 37    opbooleano -> OR
Rule 38    oper -> MAS
Rule 39    oper -> MENOS
Rule 40    oper -> POR
Rule 41    oper -> DIVIDE
Rule 42    oper -> MODULO
Rule 43    valor -> NUM
Rule 44    valor -> ID
Rule 45    valor -> APARENT valor CPARENT
Rule 46    valor -> valor oper valor
Rule 47    paramFor3 -> ID
Rule 48    emoticon -> RESERVADOS ids PUNTOCOMA
Rule 49    ids -> ID COMA ids
Rule 50    ids -> ID
Rule 51    emoticon -> NUM
Rule 52    emoticon -> ID
Rule 53    empty -> <empty>

Terminals, with rules where they appear

ACORCH               : 11
AND                  : 36
APARENT              : 14 15 45
CCORCH               : 12
CHAR                 : 
COMA                 : 49
CPARENT              : 14 15 45
DIFERENTE            : 35
DIVIDE               : 41
DOUBLE               : 
FLOAT                : 
FOR                  : 15
ID                   : 20 21 22 23 26 27 28 29 44 47 49 50 52
IF                   : 14
IGUAL                : 20 21 22 23
IGUALIG              : 34
INT                  : 
MAS                  : 26 26 27 27 38
MAYOR                : 32
MAYORIG              : 33
MENOR                : 30
MENORIG              : 31
MENOS                : 28 28 29 29 39
MODULO               : 42
NUM                  : 43 51
OR                   : 37
POR                  : 40
PUNTOCOMA            : 13 15 15 48
RESERVADOS           : 21 23 48
TAB                  : 
error                : 

Nonterminals, with rules where they appear

acorch               : 9 10
asignacion           : 13
asignacionRet        : 18 19
asignacionesRet      : 16 18
ccorch               : 9 10
comparacionRet       : 14 24
comparacionesRet     : 15
cuerpo               : 9 10
emoticon             : 0
empty                : 4 17
for                  : 9
ids                  : 48 49
if                   : 10
instruccion          : 5 7
instruccioncuerpo    : 6 8
instrucciones        : 1 2 3 3 5 6
opbooleano           : 25
oper                 : 46
paramFor1            : 15
paramFor3            : 15
valor                : 20 21 22 23 25 25 45 46 46

Parsing method: LALR

state 0

    (0) S' -> . emoticon
    (1) emoticon -> . instrucciones
    (48) emoticon -> . RESERVADOS ids PUNTOCOMA
    (51) emoticon -> . NUM
    (52) emoticon -> . ID
    (5) instrucciones -> . instruccion instrucciones
    (6) instrucciones -> . instruccioncuerpo instrucciones
    (7) instrucciones -> . instruccion
    (8) instrucciones -> . instruccioncuerpo
    (13) instruccion -> . asignacion PUNTOCOMA
    (9) instruccioncuerpo -> . for acorch cuerpo ccorch
    (10) instruccioncuerpo -> . if acorch cuerpo ccorch
    (22) asignacion -> . ID IGUAL valor
    (23) asignacion -> . RESERVADOS ID IGUAL valor
    (15) for -> . FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (14) if -> . IF APARENT comparacionRet CPARENT

    RESERVADOS      shift and go to state 10
    NUM             shift and go to state 9
    ID              shift and go to state 1
    FOR             shift and go to state 11
    IF              shift and go to state 8

    asignacion                     shift and go to state 6
    instruccioncuerpo              shift and go to state 3
    instrucciones                  shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 2
    instruccion                    shift and go to state 7
    emoticon                       shift and go to state 12

state 1

    (52) emoticon -> ID .
    (22) asignacion -> ID . IGUAL valor

    $end            reduce using rule 52 (emoticon -> ID .)
    IGUAL           shift and go to state 13


state 2

    (9) instruccioncuerpo -> for . acorch cuerpo ccorch
    (11) acorch -> . ACORCH

    ACORCH          shift and go to state 14

    acorch                         shift and go to state 15

state 3

    (6) instrucciones -> instruccioncuerpo . instrucciones
    (8) instrucciones -> instruccioncuerpo .
    (5) instrucciones -> . instruccion instrucciones
    (6) instrucciones -> . instruccioncuerpo instrucciones
    (7) instrucciones -> . instruccion
    (8) instrucciones -> . instruccioncuerpo
    (13) instruccion -> . asignacion PUNTOCOMA
    (9) instruccioncuerpo -> . for acorch cuerpo ccorch
    (10) instruccioncuerpo -> . if acorch cuerpo ccorch
    (22) asignacion -> . ID IGUAL valor
    (23) asignacion -> . RESERVADOS ID IGUAL valor
    (15) for -> . FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (14) if -> . IF APARENT comparacionRet CPARENT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RESERVADOS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 8 (instrucciones -> instruccioncuerpo .)
    CCORCH          reduce using rule 8 (instrucciones -> instruccioncuerpo .)
    ID              shift and go to state 16
    RESERVADOS      shift and go to state 18
    FOR             shift and go to state 11
    IF              shift and go to state 8

  ! ID              [ reduce using rule 8 (instrucciones -> instruccioncuerpo .) ]
  ! RESERVADOS      [ reduce using rule 8 (instrucciones -> instruccioncuerpo .) ]
  ! FOR             [ reduce using rule 8 (instrucciones -> instruccioncuerpo .) ]
  ! IF              [ reduce using rule 8 (instrucciones -> instruccioncuerpo .) ]

    if                             shift and go to state 5
    asignacion                     shift and go to state 6
    instruccioncuerpo              shift and go to state 3
    instrucciones                  shift and go to state 17
    for                            shift and go to state 2
    instruccion                    shift and go to state 7

state 4

    (1) emoticon -> instrucciones .

    $end            reduce using rule 1 (emoticon -> instrucciones .)


state 5

    (10) instruccioncuerpo -> if . acorch cuerpo ccorch
    (11) acorch -> . ACORCH

    ACORCH          shift and go to state 14

    acorch                         shift and go to state 19

state 6

    (13) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 20


state 7

    (5) instrucciones -> instruccion . instrucciones
    (7) instrucciones -> instruccion .
    (5) instrucciones -> . instruccion instrucciones
    (6) instrucciones -> . instruccioncuerpo instrucciones
    (7) instrucciones -> . instruccion
    (8) instrucciones -> . instruccioncuerpo
    (13) instruccion -> . asignacion PUNTOCOMA
    (9) instruccioncuerpo -> . for acorch cuerpo ccorch
    (10) instruccioncuerpo -> . if acorch cuerpo ccorch
    (22) asignacion -> . ID IGUAL valor
    (23) asignacion -> . RESERVADOS ID IGUAL valor
    (15) for -> . FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (14) if -> . IF APARENT comparacionRet CPARENT

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RESERVADOS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    CCORCH          reduce using rule 7 (instrucciones -> instruccion .)
    ID              shift and go to state 16
    RESERVADOS      shift and go to state 18
    FOR             shift and go to state 11
    IF              shift and go to state 8

  ! ID              [ reduce using rule 7 (instrucciones -> instruccion .) ]
  ! RESERVADOS      [ reduce using rule 7 (instrucciones -> instruccion .) ]
  ! FOR             [ reduce using rule 7 (instrucciones -> instruccion .) ]
  ! IF              [ reduce using rule 7 (instrucciones -> instruccion .) ]

    if                             shift and go to state 5
    asignacion                     shift and go to state 6
    instruccioncuerpo              shift and go to state 3
    instrucciones                  shift and go to state 21
    for                            shift and go to state 2
    instruccion                    shift and go to state 7

state 8

    (14) if -> IF . APARENT comparacionRet CPARENT

    APARENT         shift and go to state 22


state 9

    (51) emoticon -> NUM .

    $end            reduce using rule 51 (emoticon -> NUM .)


state 10

    (48) emoticon -> RESERVADOS . ids PUNTOCOMA
    (23) asignacion -> RESERVADOS . ID IGUAL valor
    (49) ids -> . ID COMA ids
    (50) ids -> . ID

    ID              shift and go to state 23

    ids                            shift and go to state 24

state 11

    (15) for -> FOR . APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT

    APARENT         shift and go to state 25


state 12

    (0) S' -> emoticon .



state 13

    (22) asignacion -> ID IGUAL . valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 28

state 14

    (11) acorch -> ACORCH .

    ID              reduce using rule 11 (acorch -> ACORCH .)
    RESERVADOS      reduce using rule 11 (acorch -> ACORCH .)
    FOR             reduce using rule 11 (acorch -> ACORCH .)
    IF              reduce using rule 11 (acorch -> ACORCH .)
    CCORCH          reduce using rule 11 (acorch -> ACORCH .)


state 15

    (9) instruccioncuerpo -> for acorch . cuerpo ccorch
    (2) cuerpo -> . instrucciones
    (3) cuerpo -> . instrucciones instrucciones
    (4) cuerpo -> . empty
    (5) instrucciones -> . instruccion instrucciones
    (6) instrucciones -> . instruccioncuerpo instrucciones
    (7) instrucciones -> . instruccion
    (8) instrucciones -> . instruccioncuerpo
    (53) empty -> .
    (13) instruccion -> . asignacion PUNTOCOMA
    (9) instruccioncuerpo -> . for acorch cuerpo ccorch
    (10) instruccioncuerpo -> . if acorch cuerpo ccorch
    (22) asignacion -> . ID IGUAL valor
    (23) asignacion -> . RESERVADOS ID IGUAL valor
    (15) for -> . FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (14) if -> . IF APARENT comparacionRet CPARENT

    CCORCH          reduce using rule 53 (empty -> .)
    ID              shift and go to state 16
    RESERVADOS      shift and go to state 18
    FOR             shift and go to state 11
    IF              shift and go to state 8

    asignacion                     shift and go to state 6
    empty                          shift and go to state 32
    instruccioncuerpo              shift and go to state 3
    cuerpo                         shift and go to state 31
    instrucciones                  shift and go to state 30
    if                             shift and go to state 5
    for                            shift and go to state 2
    instruccion                    shift and go to state 7

state 16

    (22) asignacion -> ID . IGUAL valor

    IGUAL           shift and go to state 13


state 17

    (6) instrucciones -> instruccioncuerpo instrucciones .

    $end            reduce using rule 6 (instrucciones -> instruccioncuerpo instrucciones .)
    ID              reduce using rule 6 (instrucciones -> instruccioncuerpo instrucciones .)
    RESERVADOS      reduce using rule 6 (instrucciones -> instruccioncuerpo instrucciones .)
    FOR             reduce using rule 6 (instrucciones -> instruccioncuerpo instrucciones .)
    IF              reduce using rule 6 (instrucciones -> instruccioncuerpo instrucciones .)
    CCORCH          reduce using rule 6 (instrucciones -> instruccioncuerpo instrucciones .)


state 18

    (23) asignacion -> RESERVADOS . ID IGUAL valor

    ID              shift and go to state 33


state 19

    (10) instruccioncuerpo -> if acorch . cuerpo ccorch
    (2) cuerpo -> . instrucciones
    (3) cuerpo -> . instrucciones instrucciones
    (4) cuerpo -> . empty
    (5) instrucciones -> . instruccion instrucciones
    (6) instrucciones -> . instruccioncuerpo instrucciones
    (7) instrucciones -> . instruccion
    (8) instrucciones -> . instruccioncuerpo
    (53) empty -> .
    (13) instruccion -> . asignacion PUNTOCOMA
    (9) instruccioncuerpo -> . for acorch cuerpo ccorch
    (10) instruccioncuerpo -> . if acorch cuerpo ccorch
    (22) asignacion -> . ID IGUAL valor
    (23) asignacion -> . RESERVADOS ID IGUAL valor
    (15) for -> . FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (14) if -> . IF APARENT comparacionRet CPARENT

    CCORCH          reduce using rule 53 (empty -> .)
    ID              shift and go to state 16
    RESERVADOS      shift and go to state 18
    FOR             shift and go to state 11
    IF              shift and go to state 8

    for                            shift and go to state 2
    empty                          shift and go to state 32
    instruccioncuerpo              shift and go to state 3
    cuerpo                         shift and go to state 34
    instrucciones                  shift and go to state 30
    if                             shift and go to state 5
    asignacion                     shift and go to state 6
    instruccion                    shift and go to state 7

state 20

    (13) instruccion -> asignacion PUNTOCOMA .

    ID              reduce using rule 13 (instruccion -> asignacion PUNTOCOMA .)
    RESERVADOS      reduce using rule 13 (instruccion -> asignacion PUNTOCOMA .)
    FOR             reduce using rule 13 (instruccion -> asignacion PUNTOCOMA .)
    IF              reduce using rule 13 (instruccion -> asignacion PUNTOCOMA .)
    CCORCH          reduce using rule 13 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 13 (instruccion -> asignacion PUNTOCOMA .)


state 21

    (5) instrucciones -> instruccion instrucciones .

    $end            reduce using rule 5 (instrucciones -> instruccion instrucciones .)
    ID              reduce using rule 5 (instrucciones -> instruccion instrucciones .)
    RESERVADOS      reduce using rule 5 (instrucciones -> instruccion instrucciones .)
    FOR             reduce using rule 5 (instrucciones -> instruccion instrucciones .)
    IF              reduce using rule 5 (instrucciones -> instruccion instrucciones .)
    CCORCH          reduce using rule 5 (instrucciones -> instruccion instrucciones .)


state 22

    (14) if -> IF APARENT . comparacionRet CPARENT
    (25) comparacionRet -> . valor opbooleano valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 35
    comparacionRet                 shift and go to state 36

state 23

    (23) asignacion -> RESERVADOS ID . IGUAL valor
    (49) ids -> ID . COMA ids
    (50) ids -> ID .

    IGUAL           shift and go to state 37
    COMA            shift and go to state 38
    PUNTOCOMA       reduce using rule 50 (ids -> ID .)


state 24

    (48) emoticon -> RESERVADOS ids . PUNTOCOMA

    PUNTOCOMA       shift and go to state 39


state 25

    (15) for -> FOR APARENT . paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (16) paramFor1 -> . asignacionesRet
    (17) paramFor1 -> . empty
    (18) asignacionesRet -> . asignacionRet asignacionesRet
    (19) asignacionesRet -> . asignacionRet
    (53) empty -> .
    (20) asignacionRet -> . ID IGUAL valor
    (21) asignacionRet -> . RESERVADOS ID IGUAL valor

    PUNTOCOMA       reduce using rule 53 (empty -> .)
    ID              shift and go to state 42
    RESERVADOS      shift and go to state 44

    empty                          shift and go to state 41
    asignacionRet                  shift and go to state 40
    paramFor1                      shift and go to state 43
    asignacionesRet                shift and go to state 45

state 26

    (45) valor -> APARENT . valor CPARENT
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 46

state 27

    (44) valor -> ID .

    MAS             reduce using rule 44 (valor -> ID .)
    MENOS           reduce using rule 44 (valor -> ID .)
    POR             reduce using rule 44 (valor -> ID .)
    DIVIDE          reduce using rule 44 (valor -> ID .)
    MODULO          reduce using rule 44 (valor -> ID .)
    ID              reduce using rule 44 (valor -> ID .)
    RESERVADOS      reduce using rule 44 (valor -> ID .)
    PUNTOCOMA       reduce using rule 44 (valor -> ID .)
    MENOR           reduce using rule 44 (valor -> ID .)
    MENORIG         reduce using rule 44 (valor -> ID .)
    MAYOR           reduce using rule 44 (valor -> ID .)
    MAYORIG         reduce using rule 44 (valor -> ID .)
    IGUALIG         reduce using rule 44 (valor -> ID .)
    DIFERENTE       reduce using rule 44 (valor -> ID .)
    AND             reduce using rule 44 (valor -> ID .)
    OR              reduce using rule 44 (valor -> ID .)
    CPARENT         reduce using rule 44 (valor -> ID .)


state 28

    (22) asignacion -> ID IGUAL valor .
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    PUNTOCOMA       reduce using rule 22 (asignacion -> ID IGUAL valor .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49

state 29

    (43) valor -> NUM .

    MAS             reduce using rule 43 (valor -> NUM .)
    MENOS           reduce using rule 43 (valor -> NUM .)
    POR             reduce using rule 43 (valor -> NUM .)
    DIVIDE          reduce using rule 43 (valor -> NUM .)
    MODULO          reduce using rule 43 (valor -> NUM .)
    ID              reduce using rule 43 (valor -> NUM .)
    RESERVADOS      reduce using rule 43 (valor -> NUM .)
    PUNTOCOMA       reduce using rule 43 (valor -> NUM .)
    MENOR           reduce using rule 43 (valor -> NUM .)
    MENORIG         reduce using rule 43 (valor -> NUM .)
    MAYOR           reduce using rule 43 (valor -> NUM .)
    MAYORIG         reduce using rule 43 (valor -> NUM .)
    IGUALIG         reduce using rule 43 (valor -> NUM .)
    DIFERENTE       reduce using rule 43 (valor -> NUM .)
    AND             reduce using rule 43 (valor -> NUM .)
    OR              reduce using rule 43 (valor -> NUM .)
    CPARENT         reduce using rule 43 (valor -> NUM .)


state 30

    (2) cuerpo -> instrucciones .
    (3) cuerpo -> instrucciones . instrucciones
    (5) instrucciones -> . instruccion instrucciones
    (6) instrucciones -> . instruccioncuerpo instrucciones
    (7) instrucciones -> . instruccion
    (8) instrucciones -> . instruccioncuerpo
    (13) instruccion -> . asignacion PUNTOCOMA
    (9) instruccioncuerpo -> . for acorch cuerpo ccorch
    (10) instruccioncuerpo -> . if acorch cuerpo ccorch
    (22) asignacion -> . ID IGUAL valor
    (23) asignacion -> . RESERVADOS ID IGUAL valor
    (15) for -> . FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (14) if -> . IF APARENT comparacionRet CPARENT

    CCORCH          reduce using rule 2 (cuerpo -> instrucciones .)
    ID              shift and go to state 16
    RESERVADOS      shift and go to state 18
    FOR             shift and go to state 11
    IF              shift and go to state 8

    if                             shift and go to state 5
    asignacion                     shift and go to state 6
    instruccioncuerpo              shift and go to state 3
    instrucciones                  shift and go to state 53
    for                            shift and go to state 2
    instruccion                    shift and go to state 7

state 31

    (9) instruccioncuerpo -> for acorch cuerpo . ccorch
    (12) ccorch -> . CCORCH

    CCORCH          shift and go to state 55

    ccorch                         shift and go to state 54

state 32

    (4) cuerpo -> empty .

    CCORCH          reduce using rule 4 (cuerpo -> empty .)


state 33

    (23) asignacion -> RESERVADOS ID . IGUAL valor

    IGUAL           shift and go to state 37


state 34

    (10) instruccioncuerpo -> if acorch cuerpo . ccorch
    (12) ccorch -> . CCORCH

    CCORCH          shift and go to state 55

    ccorch                         shift and go to state 56

state 35

    (25) comparacionRet -> valor . opbooleano valor
    (46) valor -> valor . oper valor
    (30) opbooleano -> . MENOR
    (31) opbooleano -> . MENORIG
    (32) opbooleano -> . MAYOR
    (33) opbooleano -> . MAYORIG
    (34) opbooleano -> . IGUALIG
    (35) opbooleano -> . DIFERENTE
    (36) opbooleano -> . AND
    (37) opbooleano -> . OR
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    MENOR           shift and go to state 64
    MENORIG         shift and go to state 65
    MAYOR           shift and go to state 58
    MAYORIG         shift and go to state 62
    IGUALIG         shift and go to state 61
    DIFERENTE       shift and go to state 60
    AND             shift and go to state 63
    OR              shift and go to state 57
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49
    opbooleano                     shift and go to state 59

state 36

    (14) if -> IF APARENT comparacionRet . CPARENT

    CPARENT         shift and go to state 66


state 37

    (23) asignacion -> RESERVADOS ID IGUAL . valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 67

state 38

    (49) ids -> ID COMA . ids
    (49) ids -> . ID COMA ids
    (50) ids -> . ID

    ID              shift and go to state 68

    ids                            shift and go to state 69

state 39

    (48) emoticon -> RESERVADOS ids PUNTOCOMA .

    $end            reduce using rule 48 (emoticon -> RESERVADOS ids PUNTOCOMA .)


state 40

    (18) asignacionesRet -> asignacionRet . asignacionesRet
    (19) asignacionesRet -> asignacionRet .
    (18) asignacionesRet -> . asignacionRet asignacionesRet
    (19) asignacionesRet -> . asignacionRet
    (20) asignacionRet -> . ID IGUAL valor
    (21) asignacionRet -> . RESERVADOS ID IGUAL valor

    PUNTOCOMA       reduce using rule 19 (asignacionesRet -> asignacionRet .)
    ID              shift and go to state 42
    RESERVADOS      shift and go to state 44

    asignacionRet                  shift and go to state 40
    asignacionesRet                shift and go to state 70

state 41

    (17) paramFor1 -> empty .

    PUNTOCOMA       reduce using rule 17 (paramFor1 -> empty .)


state 42

    (20) asignacionRet -> ID . IGUAL valor

    IGUAL           shift and go to state 71


state 43

    (15) for -> FOR APARENT paramFor1 . PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT

    PUNTOCOMA       shift and go to state 72


state 44

    (21) asignacionRet -> RESERVADOS . ID IGUAL valor

    ID              shift and go to state 73


state 45

    (16) paramFor1 -> asignacionesRet .

    PUNTOCOMA       reduce using rule 16 (paramFor1 -> asignacionesRet .)


state 46

    (45) valor -> APARENT valor . CPARENT
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    CPARENT         shift and go to state 74
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49

state 47

    (40) oper -> POR .

    NUM             reduce using rule 40 (oper -> POR .)
    ID              reduce using rule 40 (oper -> POR .)
    APARENT         reduce using rule 40 (oper -> POR .)


state 48

    (42) oper -> MODULO .

    NUM             reduce using rule 42 (oper -> MODULO .)
    ID              reduce using rule 42 (oper -> MODULO .)
    APARENT         reduce using rule 42 (oper -> MODULO .)


state 49

    (46) valor -> valor oper . valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 75

state 50

    (39) oper -> MENOS .

    NUM             reduce using rule 39 (oper -> MENOS .)
    ID              reduce using rule 39 (oper -> MENOS .)
    APARENT         reduce using rule 39 (oper -> MENOS .)


state 51

    (41) oper -> DIVIDE .

    NUM             reduce using rule 41 (oper -> DIVIDE .)
    ID              reduce using rule 41 (oper -> DIVIDE .)
    APARENT         reduce using rule 41 (oper -> DIVIDE .)


state 52

    (38) oper -> MAS .

    NUM             reduce using rule 38 (oper -> MAS .)
    ID              reduce using rule 38 (oper -> MAS .)
    APARENT         reduce using rule 38 (oper -> MAS .)


state 53

    (3) cuerpo -> instrucciones instrucciones .

    CCORCH          reduce using rule 3 (cuerpo -> instrucciones instrucciones .)


state 54

    (9) instruccioncuerpo -> for acorch cuerpo ccorch .

    ID              reduce using rule 9 (instruccioncuerpo -> for acorch cuerpo ccorch .)
    RESERVADOS      reduce using rule 9 (instruccioncuerpo -> for acorch cuerpo ccorch .)
    FOR             reduce using rule 9 (instruccioncuerpo -> for acorch cuerpo ccorch .)
    IF              reduce using rule 9 (instruccioncuerpo -> for acorch cuerpo ccorch .)
    CCORCH          reduce using rule 9 (instruccioncuerpo -> for acorch cuerpo ccorch .)
    $end            reduce using rule 9 (instruccioncuerpo -> for acorch cuerpo ccorch .)


state 55

    (12) ccorch -> CCORCH .

    ID              reduce using rule 12 (ccorch -> CCORCH .)
    RESERVADOS      reduce using rule 12 (ccorch -> CCORCH .)
    FOR             reduce using rule 12 (ccorch -> CCORCH .)
    IF              reduce using rule 12 (ccorch -> CCORCH .)
    $end            reduce using rule 12 (ccorch -> CCORCH .)
    CCORCH          reduce using rule 12 (ccorch -> CCORCH .)


state 56

    (10) instruccioncuerpo -> if acorch cuerpo ccorch .

    ID              reduce using rule 10 (instruccioncuerpo -> if acorch cuerpo ccorch .)
    RESERVADOS      reduce using rule 10 (instruccioncuerpo -> if acorch cuerpo ccorch .)
    FOR             reduce using rule 10 (instruccioncuerpo -> if acorch cuerpo ccorch .)
    IF              reduce using rule 10 (instruccioncuerpo -> if acorch cuerpo ccorch .)
    CCORCH          reduce using rule 10 (instruccioncuerpo -> if acorch cuerpo ccorch .)
    $end            reduce using rule 10 (instruccioncuerpo -> if acorch cuerpo ccorch .)


state 57

    (37) opbooleano -> OR .

    NUM             reduce using rule 37 (opbooleano -> OR .)
    ID              reduce using rule 37 (opbooleano -> OR .)
    APARENT         reduce using rule 37 (opbooleano -> OR .)


state 58

    (32) opbooleano -> MAYOR .

    NUM             reduce using rule 32 (opbooleano -> MAYOR .)
    ID              reduce using rule 32 (opbooleano -> MAYOR .)
    APARENT         reduce using rule 32 (opbooleano -> MAYOR .)


state 59

    (25) comparacionRet -> valor opbooleano . valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 76

state 60

    (35) opbooleano -> DIFERENTE .

    NUM             reduce using rule 35 (opbooleano -> DIFERENTE .)
    ID              reduce using rule 35 (opbooleano -> DIFERENTE .)
    APARENT         reduce using rule 35 (opbooleano -> DIFERENTE .)


state 61

    (34) opbooleano -> IGUALIG .

    NUM             reduce using rule 34 (opbooleano -> IGUALIG .)
    ID              reduce using rule 34 (opbooleano -> IGUALIG .)
    APARENT         reduce using rule 34 (opbooleano -> IGUALIG .)


state 62

    (33) opbooleano -> MAYORIG .

    NUM             reduce using rule 33 (opbooleano -> MAYORIG .)
    ID              reduce using rule 33 (opbooleano -> MAYORIG .)
    APARENT         reduce using rule 33 (opbooleano -> MAYORIG .)


state 63

    (36) opbooleano -> AND .

    NUM             reduce using rule 36 (opbooleano -> AND .)
    ID              reduce using rule 36 (opbooleano -> AND .)
    APARENT         reduce using rule 36 (opbooleano -> AND .)


state 64

    (30) opbooleano -> MENOR .

    NUM             reduce using rule 30 (opbooleano -> MENOR .)
    ID              reduce using rule 30 (opbooleano -> MENOR .)
    APARENT         reduce using rule 30 (opbooleano -> MENOR .)


state 65

    (31) opbooleano -> MENORIG .

    NUM             reduce using rule 31 (opbooleano -> MENORIG .)
    ID              reduce using rule 31 (opbooleano -> MENORIG .)
    APARENT         reduce using rule 31 (opbooleano -> MENORIG .)


state 66

    (14) if -> IF APARENT comparacionRet CPARENT .

    ACORCH          reduce using rule 14 (if -> IF APARENT comparacionRet CPARENT .)


state 67

    (23) asignacion -> RESERVADOS ID IGUAL valor .
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    PUNTOCOMA       reduce using rule 23 (asignacion -> RESERVADOS ID IGUAL valor .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49

state 68

    (49) ids -> ID . COMA ids
    (50) ids -> ID .

    COMA            shift and go to state 38
    PUNTOCOMA       reduce using rule 50 (ids -> ID .)


state 69

    (49) ids -> ID COMA ids .

    PUNTOCOMA       reduce using rule 49 (ids -> ID COMA ids .)


state 70

    (18) asignacionesRet -> asignacionRet asignacionesRet .

    PUNTOCOMA       reduce using rule 18 (asignacionesRet -> asignacionRet asignacionesRet .)


state 71

    (20) asignacionRet -> ID IGUAL . valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 77

state 72

    (15) for -> FOR APARENT paramFor1 PUNTOCOMA . comparacionesRet PUNTOCOMA paramFor3 CPARENT
    (24) comparacionesRet -> . comparacionRet
    (25) comparacionRet -> . valor opbooleano valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    comparacionesRet               shift and go to state 78
    valor                          shift and go to state 35
    comparacionRet                 shift and go to state 79

state 73

    (21) asignacionRet -> RESERVADOS ID . IGUAL valor

    IGUAL           shift and go to state 80


state 74

    (45) valor -> APARENT valor CPARENT .

    MAS             reduce using rule 45 (valor -> APARENT valor CPARENT .)
    MENOS           reduce using rule 45 (valor -> APARENT valor CPARENT .)
    POR             reduce using rule 45 (valor -> APARENT valor CPARENT .)
    DIVIDE          reduce using rule 45 (valor -> APARENT valor CPARENT .)
    MODULO          reduce using rule 45 (valor -> APARENT valor CPARENT .)
    ID              reduce using rule 45 (valor -> APARENT valor CPARENT .)
    RESERVADOS      reduce using rule 45 (valor -> APARENT valor CPARENT .)
    PUNTOCOMA       reduce using rule 45 (valor -> APARENT valor CPARENT .)
    MENOR           reduce using rule 45 (valor -> APARENT valor CPARENT .)
    MENORIG         reduce using rule 45 (valor -> APARENT valor CPARENT .)
    MAYOR           reduce using rule 45 (valor -> APARENT valor CPARENT .)
    MAYORIG         reduce using rule 45 (valor -> APARENT valor CPARENT .)
    IGUALIG         reduce using rule 45 (valor -> APARENT valor CPARENT .)
    DIFERENTE       reduce using rule 45 (valor -> APARENT valor CPARENT .)
    AND             reduce using rule 45 (valor -> APARENT valor CPARENT .)
    OR              reduce using rule 45 (valor -> APARENT valor CPARENT .)
    CPARENT         reduce using rule 45 (valor -> APARENT valor CPARENT .)


state 75

    (46) valor -> valor oper valor .
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    ID              reduce using rule 46 (valor -> valor oper valor .)
    RESERVADOS      reduce using rule 46 (valor -> valor oper valor .)
    PUNTOCOMA       reduce using rule 46 (valor -> valor oper valor .)
    MENOR           reduce using rule 46 (valor -> valor oper valor .)
    MENORIG         reduce using rule 46 (valor -> valor oper valor .)
    MAYOR           reduce using rule 46 (valor -> valor oper valor .)
    MAYORIG         reduce using rule 46 (valor -> valor oper valor .)
    IGUALIG         reduce using rule 46 (valor -> valor oper valor .)
    DIFERENTE       reduce using rule 46 (valor -> valor oper valor .)
    AND             reduce using rule 46 (valor -> valor oper valor .)
    OR              reduce using rule 46 (valor -> valor oper valor .)
    CPARENT         reduce using rule 46 (valor -> valor oper valor .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

  ! MAS             [ reduce using rule 46 (valor -> valor oper valor .) ]
  ! MENOS           [ reduce using rule 46 (valor -> valor oper valor .) ]
  ! POR             [ reduce using rule 46 (valor -> valor oper valor .) ]
  ! DIVIDE          [ reduce using rule 46 (valor -> valor oper valor .) ]
  ! MODULO          [ reduce using rule 46 (valor -> valor oper valor .) ]

    oper                           shift and go to state 49

state 76

    (25) comparacionRet -> valor opbooleano valor .
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    CPARENT         reduce using rule 25 (comparacionRet -> valor opbooleano valor .)
    PUNTOCOMA       reduce using rule 25 (comparacionRet -> valor opbooleano valor .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49

state 77

    (20) asignacionRet -> ID IGUAL valor .
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    ID              reduce using rule 20 (asignacionRet -> ID IGUAL valor .)
    RESERVADOS      reduce using rule 20 (asignacionRet -> ID IGUAL valor .)
    PUNTOCOMA       reduce using rule 20 (asignacionRet -> ID IGUAL valor .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49

state 78

    (15) for -> FOR APARENT paramFor1 PUNTOCOMA comparacionesRet . PUNTOCOMA paramFor3 CPARENT

    PUNTOCOMA       shift and go to state 81


state 79

    (24) comparacionesRet -> comparacionRet .

    PUNTOCOMA       reduce using rule 24 (comparacionesRet -> comparacionRet .)


state 80

    (21) asignacionRet -> RESERVADOS ID IGUAL . valor
    (43) valor -> . NUM
    (44) valor -> . ID
    (45) valor -> . APARENT valor CPARENT
    (46) valor -> . valor oper valor

    NUM             shift and go to state 29
    ID              shift and go to state 27
    APARENT         shift and go to state 26

    valor                          shift and go to state 82

state 81

    (15) for -> FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA . paramFor3 CPARENT
    (26) paramFor3 -> . ID MAS MAS
    (27) paramFor3 -> . MAS MAS ID
    (28) paramFor3 -> . MENOS MENOS ID
    (29) paramFor3 -> . ID MENOS MENOS
    (47) paramFor3 -> . ID

    ID              shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85

    paramFor3                      shift and go to state 86

state 82

    (21) asignacionRet -> RESERVADOS ID IGUAL valor .
    (46) valor -> valor . oper valor
    (38) oper -> . MAS
    (39) oper -> . MENOS
    (40) oper -> . POR
    (41) oper -> . DIVIDE
    (42) oper -> . MODULO

    ID              reduce using rule 21 (asignacionRet -> RESERVADOS ID IGUAL valor .)
    RESERVADOS      reduce using rule 21 (asignacionRet -> RESERVADOS ID IGUAL valor .)
    PUNTOCOMA       reduce using rule 21 (asignacionRet -> RESERVADOS ID IGUAL valor .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 50
    POR             shift and go to state 47
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 48

    oper                           shift and go to state 49

state 83

    (26) paramFor3 -> ID . MAS MAS
    (29) paramFor3 -> ID . MENOS MENOS
    (47) paramFor3 -> ID .

    MAS             shift and go to state 88
    MENOS           shift and go to state 87
    CPARENT         reduce using rule 47 (paramFor3 -> ID .)


state 84

    (27) paramFor3 -> MAS . MAS ID

    MAS             shift and go to state 89


state 85

    (28) paramFor3 -> MENOS . MENOS ID

    MENOS           shift and go to state 90


state 86

    (15) for -> FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 . CPARENT

    CPARENT         shift and go to state 91


state 87

    (29) paramFor3 -> ID MENOS . MENOS

    MENOS           shift and go to state 92


state 88

    (26) paramFor3 -> ID MAS . MAS

    MAS             shift and go to state 93


state 89

    (27) paramFor3 -> MAS MAS . ID

    ID              shift and go to state 94


state 90

    (28) paramFor3 -> MENOS MENOS . ID

    ID              shift and go to state 95


state 91

    (15) for -> FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT .

    ACORCH          reduce using rule 15 (for -> FOR APARENT paramFor1 PUNTOCOMA comparacionesRet PUNTOCOMA paramFor3 CPARENT .)


state 92

    (29) paramFor3 -> ID MENOS MENOS .

    CPARENT         reduce using rule 29 (paramFor3 -> ID MENOS MENOS .)


state 93

    (26) paramFor3 -> ID MAS MAS .

    CPARENT         reduce using rule 26 (paramFor3 -> ID MAS MAS .)


state 94

    (27) paramFor3 -> MAS MAS ID .

    CPARENT         reduce using rule 27 (paramFor3 -> MAS MAS ID .)


state 95

    (28) paramFor3 -> MENOS MENOS ID .

    CPARENT         reduce using rule 28 (paramFor3 -> MENOS MENOS ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for RESERVADOS in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for RESERVADOS in state 7 resolved as shift
WARNING: shift/reduce conflict for FOR in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for POR in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 75 resolved as shift
